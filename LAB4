using System;
using System.Runtime.CompilerServices;
using System.Security.Cryptography;

namespace Lab_4
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Circle circle1 = new Circle(2);
            Circle circle2 = new Circle(12);

            Console.WriteLine("Площа кола:" + circle1.Area());
            Console.WriteLine("Площа кола:" + circle2.Area());
            Console.WriteLine("Периметр кола:" + circle1.Perimeter());
            Console.WriteLine("Периметр кола:" + circle2.Perimeter());

            Square square1 = new Square(5);
            Square square2 = new Square(25);

            Console.WriteLine("Площа квадрату:" + square1.Area());
            Console.WriteLine("Площа квадрату:" + square2.Area());
            Console.WriteLine("Периметр квадрату:" + square1.Perimeter());
            Console.WriteLine("Периметр квадрату:" + square2.Perimeter());

            Console.ReadKey();
        }
        abstract public class Shape
        {
            private string name;

            public string Name
            {
                get { return name; }
                set { name = value; }
            }

            public void Figure(string Name)
            {
                Console.WriteLine($" {this.Name}");
            }
            public abstract double Area();
            public abstract double Perimeter();
        }

        public class Circle : Shape
        {
            private double radius;

            public Circle(double radius)
            {
                this.radius = radius;
            }

            public override double Area()
            {
                double area;
                area = Math.PI * this.radius;
                return area;
            }

            public override double Perimeter()
            {
                double perimeter;
                perimeter = 2 * Math.PI * this.radius;
                return perimeter;
            }
        }

        public class Square : Shape
        {
            private double side;
            public Square(double side)
            {
                this.side = side;
            }

            public override double Area()
            {
                double area;
                area = 4 * this.side;
                return area;
            }
            public override double Perimeter()
            {
                double perimeter;
                perimeter = this.side * this.side;
                return perimeter;
            }
        }
    }
}
